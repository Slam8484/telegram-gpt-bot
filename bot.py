import os
import openai
from aiogram import Bot, Dispatcher, types, executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
openai.api_base = "https://api.deepinfra.com/v1/openai"
openai.api_key = OPENAI_API_KEY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.reply("üëã –ü—Ä–∏–≤–µ—Ç, –í—è—á–µ—Å–ª–∞–≤!\n–Ø –±–æ—Ç –Ω–∞ –±–∞–∑–µ GPT. –ù–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!")

@dp.message_handler()
async def handle_message(message: types.Message):
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", message.text)
    try:
        response = openai.ChatCompletion.create(
            model="mistralai/Mistral-7B-Instruct-v0.2",
            messages=[{"role": "user", "content": message.text}]
        )
        reply_text = response['choices'][0]['message']['content']
        print("–û—Ç–≤–µ—Ç GPT:", reply_text)
        await message.reply(reply_text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞:", e)
        await message.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
        print("–û—à–∏–±–∫–∞:", e)

if __name__ == '__main__':
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    executor.start_polling(dp)
